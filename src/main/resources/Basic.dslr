//created on: 31-Jan-2013
package Rules

//list any import classes here.
import agents.NomicAgent;
import actions.Vote;
import actions.ProposeRuleChange;
import enums.VoteType;
import facts.*;

//declare any global variables here
global org.apache.log4j.Logger logger
global uk.ac.imperial.presage2.core.db.StorageService storage

rule "First agent found"
    when
        $agent : NomicAgent( )
        not $n : NomicNumber(attribute.compareTo("numberOfAgents") == 0)
    then
        System.out.println("The first agent!");
        insert(new NomicNumber(1, "numberOfAgents"));
end

rule "Agent addition"
	when
		$agent : NomicAgent($ID : sequentialID )
		$n : NomicNumber(number <= $ID && attribute.compareTo("numberOfAgents") == 0)
	then
		System.out.println("Found another agent!");
		modify ($n) {
			setNumber($n.getNumber() + 1);
		}
end

rule "Discard old turns"
	when
		$t : Turn($n : number)
		$t2 : Turn(number < $n)
	then
		logger.info($t);
		retract($t2);
end

rule "Whose turn is it"
	when
		$agent : NomicAgent($ID : sequentialID)
		$n : Number() from accumulate ( $sgc : NomicAgent( ) count( $sgc ) )
		$turn : Turn((number % $n.intValue()) == ($ID) && activePlayer != $agent)
	then
		logger.info("It's this guy's turn: " + $agent.getName());
		modify ($turn) {
			setActivePlayer($agent)
		};
end

rule "Unanimous votes succeed for first two rounds"
	when
		$vote : Vote($turnNumber : t, vote == VoteType.YES)
		$n : Number() from accumulate ( $sgc : Vote(t == $turnNumber, vote == VoteType.YES) count( $sgc ) )
		$agents : NomicNumber(attribute.compareTo("numberOfAgents") == 0, number == $n.intValue())
		$turn : Turn(number == $turnNumber, $turnNumber < ($agents.getNumber() * 2))
		$ruleChange : ProposeRuleChange(t == $turnNumber, succeeded == false)
	then
		modify($ruleChange) {
			setSucceeded(true);
		};
end

rule "Majority votes succeed after second round"
	when
		$vote : Vote($turnNumber : t, vote == VoteType.YES)
		$n : Number() from accumulate ( $sgc : Vote(t == $turnNumber, vote == VoteType.YES) count( $sgc ) )
		$agents : NomicNumber(attribute.compareTo("numberOfAgents") == 0, number > ($n.intValue() / 2))
		$turn : Turn(number == $turnNumber, $turnNumber >= ($agents.getNumber() * 2))
		$ruleChange : ProposeRuleChange(t == $turnNumber, succeeded == false)
	then
		modify($ruleChange) {
			setSucceeded(true);
		};
end

rule "All Agents Must Vote"
	when
		$turn : Turn($turnNumber : number, allVoted == false)
		$n : Number() from accumulate ( $sgc : Vote(t == $turnNumber) count( $sgc ) )
	then
		modify($turn) {
			setAllVoted(true);
		};
end