//created on: 31-Jan-2013
package Rules

//list any import classes here.
import agents.NomicAgent;
import agents.SelfishAgent;
import agents.Test;
import actions.Vote;
import actions.ProposeRuleChange;
import enums.VoteType;
import facts.*;

//declare any global variables here
global org.apache.log4j.Logger logger
global uk.ac.imperial.presage2.core.db.StorageService storage
global java.util.Random rand;

rule "Whose turn is it"
	when
		$agent : NomicAgent($ID : sequentialID)
		$n : Number() from accumulate ( $sgc : NomicAgent( ) count( $sgc ) )
		$turn : Turn($n > 0 && (number % $n.intValue()) == ($ID) && activePlayer != $agent)
	then
		logger.info("It's this guy's turn: " + $agent.getName());
		modify ($turn) {
			setActivePlayer($agent)
		};
end

rule "Unanimous votes succeed for first two rounds"
	when
		$vote : Vote($turnNumber : t, vote == VoteType.YES)
		$n : Number() from accumulate ( $sgc : Vote(t == $turnNumber, vote == VoteType.YES) count( $sgc ) )
		$agents :  Number() from accumulate ( $sgc : NomicAgent( ) count( $sgc ) )
		eval($agents.intValue() == $n.intValue())
		$turn : Turn(number == $turnNumber, $turnNumber < ($agents.intValue() * 2))
		$ruleChange : ProposeRuleChange(t == $turnNumber, succeeded == false)
	then
		logger.info("Unanimous vote succeeded");
		modify($ruleChange) {
			setSucceeded(true);
		};
end

rule "Majority votes succeed after second round"
	salience 20
	when
		$vote : Vote($turnNumber : t, vote == VoteType.YES)
		$n : Number() from accumulate ( $sgc : Vote(t == $turnNumber, vote == VoteType.YES) count( $sgc ) )
		$agents :  Number() from accumulate ( $sgc : NomicAgent( ) count( $sgc ) )
		eval($n.intValue() > ($agents.intValue() / 2))
		$turn : Turn(number == $turnNumber, $turnNumber >= ($agents.intValue() * 2))
		$ruleChange : ProposeRuleChange(t == $turnNumber, succeeded == false)
	then
		logger.info("Majority vote succeeded");
		modify($ruleChange) {
			setSucceeded(true);
		};
end

rule "All Agents Must Vote"
	when
		$turn : Turn($turnNumber : number, allVoted == false)
		$n : Number() from accumulate ( $sgc : Vote(t == $turnNumber) count( $sgc ) )
		$agents : Number() from accumulate ( $a : NomicAgent( ) count( $a ) )
		eval($agents.intValue() == $n.intValue())
	then
		modify($turn) {
			setAllVoted(true);
		};
end

rule "Each Agent Can Only Vote Once Per Turn"
	when
		$vote : Vote($turnNumber : t, $agent: voter, $id : voteID)
		$vote2 : Vote(t == $turnNumber, voter.getID() == $agent.getID(), voteID != $id)
	then
		logger.info($agent.getName() + " has attempted to vote twice, and been refused.");
		logger.info("Turn number: " + $turnNumber);
		retract($vote2);
end

rule "Winner Is First To 100 Points"
	when
		$agent : NomicAgent(points >= 100)
	then
		logger.info($agent.getName() + " wins.");
		insert(new Win($agent));
end

rule "Proposing a losing vote costs you 10 points"
	salience 10
	when
		$turn : Turn($turnNumber : number, allVoted == true)
		$ruleChange : ProposeRuleChange(t == $turnNumber, succeeded == false, $agent : proposer)
	then
		logger.info($agent.getName() + " loses 10 points for proposing a failed rule!");
		modify($agent) {
			setPoints($agent.getPoints() - 10);
		};
end

rule "Voting against a successful proposal gains you 10 points"
	salience 10
	when
		$turn : Turn($turnNumber : number, allVoted == true)
		$vote : Vote(vote == VoteType.NO, $agent : voter, t == $turnNumber)
		$ruleChange : ProposeRuleChange(t == $turnNumber, succeeded == true)
	then
		logger.info($agent.getName() + " gains 10 points for voting against a successful proposal.");
		modify($agent) {
			setPoints($agent.getPoints() + 10);
		}
end

rule "You gain 1d6 points at the end of your turn"
	salience 10
	when
		$turn : Turn(allVoted == true, $agent : activePlayer)
	then
		if (rand == null)
			rand = new java.util.Random();
		int r = rand.nextInt(6) + 1;
		logger.info($agent.getName() + " gains " + r + " points at the end of their turn.");
		modify($agent) {
			setPoints($agent.getPoints() + r);
		}
end 

rule "Selfish Agent Test"
	when
		Test ( )
		$agent : SelfishAgent ( )
	then
		System.out.println("Lololol" + $agent.getName());
end